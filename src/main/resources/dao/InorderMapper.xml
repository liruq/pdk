<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erp.mapper.InorderMapper" >
  <resultMap id="BaseResultMap" type="com.erp.model.Inorder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="productId" property="productId" jdbcType="INTEGER" />
    <result column="vendor" property="vendor" jdbcType="VARCHAR" />
    <result column="inprice" property="inprice" jdbcType="VARCHAR" />
    <result column="settlement" property="settlement" jdbcType="INTEGER" />
    <result column="payable" property="payable" jdbcType="INTEGER" />
    <result column="paid" property="paid" jdbcType="INTEGER" />
    <result column="unpay" property="unpay" jdbcType="INTEGER" />
    <result column="brokerage" property="brokerage" jdbcType="VARCHAR" />
    <result column="operateUserId" property="operateUserId" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, productId, vendor, inprice, settlement, payable, paid, unpay, brokerage, operateUserId, 
    createTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from inorder
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from inorder
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.erp.model.Inorder" >
    insert into inorder (id, productId, vendor, 
      inprice, settlement, payable, 
      paid, unpay, brokerage, 
      operateUserId, createTime)
    values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{vendor,jdbcType=VARCHAR}, 
      #{inprice,jdbcType=VARCHAR}, #{settlement,jdbcType=INTEGER}, #{payable,jdbcType=INTEGER}, 
      #{paid,jdbcType=INTEGER}, #{unpay,jdbcType=INTEGER}, #{brokerage,jdbcType=VARCHAR}, 
      #{operateUserId,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.erp.model.Inorder" >
    insert into inorder
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productId != null" >
        productId,
      </if>
      <if test="vendor != null" >
        vendor,
      </if>
      <if test="inprice != null" >
        inprice,
      </if>
      <if test="settlement != null" >
        settlement,
      </if>
      <if test="payable != null" >
        payable,
      </if>
      <if test="paid != null" >
        paid,
      </if>
      <if test="unpay != null" >
        unpay,
      </if>
      <if test="brokerage != null" >
        brokerage,
      </if>
      <if test="operateUserId != null" >
        operateUserId,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="vendor != null" >
        #{vendor,jdbcType=VARCHAR},
      </if>
      <if test="inprice != null" >
        #{inprice,jdbcType=VARCHAR},
      </if>
      <if test="settlement != null" >
        #{settlement,jdbcType=INTEGER},
      </if>
      <if test="payable != null" >
        #{payable,jdbcType=INTEGER},
      </if>
      <if test="paid != null" >
        #{paid,jdbcType=INTEGER},
      </if>
      <if test="unpay != null" >
        #{unpay,jdbcType=INTEGER},
      </if>
      <if test="brokerage != null" >
        #{brokerage,jdbcType=VARCHAR},
      </if>
      <if test="operateUserId != null" >
        #{operateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.erp.model.Inorder" >
    update inorder
    <set >
      <if test="productId != null" >
        productId = #{productId,jdbcType=INTEGER},
      </if>
      <if test="vendor != null" >
        vendor = #{vendor,jdbcType=VARCHAR},
      </if>
      <if test="inprice != null" >
        inprice = #{inprice,jdbcType=VARCHAR},
      </if>
      <if test="settlement != null" >
        settlement = #{settlement,jdbcType=INTEGER},
      </if>
      <if test="payable != null" >
        payable = #{payable,jdbcType=INTEGER},
      </if>
      <if test="paid != null" >
        paid = #{paid,jdbcType=INTEGER},
      </if>
      <if test="unpay != null" >
        unpay = #{unpay,jdbcType=INTEGER},
      </if>
      <if test="brokerage != null" >
        brokerage = #{brokerage,jdbcType=VARCHAR},
      </if>
      <if test="operateUserId != null" >
        operateUserId = #{operateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erp.model.Inorder" >
    update inorder
    set productId = #{productId,jdbcType=INTEGER},
      vendor = #{vendor,jdbcType=VARCHAR},
      inprice = #{inprice,jdbcType=VARCHAR},
      settlement = #{settlement,jdbcType=INTEGER},
      payable = #{payable,jdbcType=INTEGER},
      paid = #{paid,jdbcType=INTEGER},
      unpay = #{unpay,jdbcType=INTEGER},
      brokerage = #{brokerage,jdbcType=VARCHAR},
      operateUserId = #{operateUserId,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>